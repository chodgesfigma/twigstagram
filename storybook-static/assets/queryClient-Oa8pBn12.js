var _=(t,e,s)=>{if(!e.has(t))throw TypeError("Cannot "+s)};var a=(t,e,s)=>(_(t,e,"read from private field"),s?s.call(t):e.get(t)),l=(t,e,s)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,s)},h=(t,e,s,r)=>(_(t,e,"write to private field"),r?r.call(t,s):e.set(t,s),s);var D=(t,e,s,r)=>({set _(i){h(t,e,i,s)},get _(){return a(t,e,r)}});import{S as X,h as Y,a as re,n as c,m as N,M as ae,b as L,c as g,s as Z,d as ie,e as ne,f as ue,o as U,g as he,i as $,p as z}from"./QueryClientProvider-CirB6fzW.js";var y,J,oe=(J=class extends X{constructor(e={}){super();l(this,y,void 0);this.config=e,h(this,y,new Map)}build(e,s,r){const i=s.queryKey,u=s.queryHash??Y(i,s);let f=this.get(u);return f||(f=new re({cache:this,queryKey:i,queryHash:u,options:e.defaultQueryOptions(s),state:r,defaultOptions:e.getQueryDefaults(i)}),this.add(f)),f}add(e){a(this,y).has(e.queryHash)||(a(this,y).set(e.queryHash,e),this.notify({type:"added",query:e}))}remove(e){const s=a(this,y).get(e.queryHash);s&&(e.destroy(),s===e&&a(this,y).delete(e.queryHash),this.notify({type:"removed",query:e}))}clear(){c.batch(()=>{this.getAll().forEach(e=>{this.remove(e)})})}get(e){return a(this,y).get(e)}getAll(){return[...a(this,y).values()]}find(e){const s={exact:!0,...e};return this.getAll().find(r=>N(s,r))}findAll(e={}){const s=this.getAll();return Object.keys(e).length>0?s.filter(r=>N(e,r)):s}notify(e){c.batch(()=>{this.listeners.forEach(s=>{s(e)})})}onFocus(){c.batch(()=>{this.getAll().forEach(e=>{e.onFocus()})})}onOnline(){c.batch(()=>{this.getAll().forEach(e=>{e.onOnline()})})}},y=new WeakMap,J),o,F,V,ce=(V=class extends X{constructor(e={}){super();l(this,o,void 0);l(this,F,void 0);this.config=e,h(this,o,new Map),h(this,F,Date.now())}build(e,s,r){const i=new ae({mutationCache:this,mutationId:++D(this,F)._,options:e.defaultMutationOptions(s),state:r});return this.add(i),i}add(e){const s=E(e),r=a(this,o).get(s)??[];r.push(e),a(this,o).set(s,r),this.notify({type:"added",mutation:e})}remove(e){var r;const s=E(e);if(a(this,o).has(s)){const i=(r=a(this,o).get(s))==null?void 0:r.filter(u=>u!==e);i&&(i.length===0?a(this,o).delete(s):a(this,o).set(s,i))}this.notify({type:"removed",mutation:e})}canRun(e){var r;const s=(r=a(this,o).get(E(e)))==null?void 0:r.find(i=>i.state.status==="pending");return!s||s===e}runNext(e){var r;const s=(r=a(this,o).get(E(e)))==null?void 0:r.find(i=>i!==e&&i.state.isPaused);return(s==null?void 0:s.continue())??Promise.resolve()}clear(){c.batch(()=>{this.getAll().forEach(e=>{this.remove(e)})})}getAll(){return[...a(this,o).values()].flat()}find(e){const s={exact:!0,...e};return this.getAll().find(r=>L(s,r))}findAll(e={}){return this.getAll().filter(s=>L(e,s))}notify(e){c.batch(()=>{this.listeners.forEach(s=>{s(e)})})}resumePausedMutations(){const e=this.getAll().filter(s=>s.state.isPaused);return c.batch(()=>Promise.all(e.map(s=>s.continue().catch(g))))}},o=new WeakMap,F=new WeakMap,V);function E(t){var e;return((e=t.options.scope)==null?void 0:e.id)??String(t.mutationId)}function le(t){return{onFetch:(e,s)=>{const r=async()=>{var S,T,I,k,R;const i=e.options,u=(I=(T=(S=e.fetchOptions)==null?void 0:S.meta)==null?void 0:T.fetchMore)==null?void 0:I.direction,f=((k=e.state.data)==null?void 0:k.pages)||[],H=((R=e.state.data)==null?void 0:R.pageParams)||[],x={pages:[],pageParams:[]};let C=!1;const ee=d=>{Object.defineProperty(d,"signal",{enumerable:!0,get:()=>(e.signal.aborted?C=!0:e.signal.addEventListener("abort",()=>{C=!0}),e.signal)})},te=e.options.queryFn&&e.options.queryFn!==Z?e.options.queryFn:()=>Promise.reject(new Error(`Missing queryFn: '${e.options.queryHash}'`)),K=async(d,m,Q)=>{if(C)return Promise.reject();if(m==null&&d.pages.length)return Promise.resolve(d);const A={queryKey:e.queryKey,pageParam:m,direction:Q?"backward":"forward",meta:e.options.meta};ee(A);const se=await te(A),{maxPages:j}=e.options,B=Q?ie:ne;return{pages:B(d.pages,se,j),pageParams:B(d.pageParams,m,j)}};let b;if(u&&f.length){const d=u==="backward",m=d?fe:G,Q={pages:f,pageParams:H},A=m(i,Q);b=await K(Q,A,d)}else{b=await K(x,H[0]??i.initialPageParam);const d=t??f.length;for(let m=1;m<d;m++){const Q=G(i,b);b=await K(b,Q)}}return b};e.options.persister?e.fetchFn=()=>{var i,u;return(u=(i=e.options).persister)==null?void 0:u.call(i,r,{queryKey:e.queryKey,meta:e.options.meta,signal:e.signal},s)}:e.fetchFn=r}}}function G(t,{pages:e,pageParams:s}){const r=e.length-1;return t.getNextPageParam(e[r],e,s[r],s)}function fe(t,{pages:e,pageParams:s}){var r;return(r=t.getPreviousPageParam)==null?void 0:r.call(t,e[0],e,s[0],s)}var n,p,P,O,M,v,q,w,W,ge=(W=class{constructor(t={}){l(this,n,void 0);l(this,p,void 0);l(this,P,void 0);l(this,O,void 0);l(this,M,void 0);l(this,v,void 0);l(this,q,void 0);l(this,w,void 0);h(this,n,t.queryCache||new oe),h(this,p,t.mutationCache||new ce),h(this,P,t.defaultOptions||{}),h(this,O,new Map),h(this,M,new Map),h(this,v,0)}mount(){D(this,v)._++,a(this,v)===1&&(h(this,q,ue.subscribe(async t=>{t&&(await this.resumePausedMutations(),a(this,n).onFocus())})),h(this,w,U.subscribe(async t=>{t&&(await this.resumePausedMutations(),a(this,n).onOnline())})))}unmount(){var t,e;D(this,v)._--,a(this,v)===0&&((t=a(this,q))==null||t.call(this),h(this,q,void 0),(e=a(this,w))==null||e.call(this),h(this,w,void 0))}isFetching(t){return a(this,n).findAll({...t,fetchStatus:"fetching"}).length}isMutating(t){return a(this,p).findAll({...t,status:"pending"}).length}getQueryData(t){var s;const e=this.defaultQueryOptions({queryKey:t});return(s=a(this,n).get(e.queryHash))==null?void 0:s.state.data}ensureQueryData(t){const e=this.getQueryData(t.queryKey);if(e===void 0)return this.fetchQuery(t);{const s=this.defaultQueryOptions(t),r=a(this,n).build(this,s);return t.revalidateIfStale&&r.isStaleByTime(s.staleTime)&&this.prefetchQuery(s),Promise.resolve(e)}}getQueriesData(t){return a(this,n).findAll(t).map(({queryKey:e,state:s})=>{const r=s.data;return[e,r]})}setQueryData(t,e,s){const r=this.defaultQueryOptions({queryKey:t}),i=a(this,n).get(r.queryHash),u=i==null?void 0:i.state.data,f=he(e,u);if(f!==void 0)return a(this,n).build(this,r).setData(f,{...s,manual:!0})}setQueriesData(t,e,s){return c.batch(()=>a(this,n).findAll(t).map(({queryKey:r})=>[r,this.setQueryData(r,e,s)]))}getQueryState(t){var s;const e=this.defaultQueryOptions({queryKey:t});return(s=a(this,n).get(e.queryHash))==null?void 0:s.state}removeQueries(t){const e=a(this,n);c.batch(()=>{e.findAll(t).forEach(s=>{e.remove(s)})})}resetQueries(t,e){const s=a(this,n),r={type:"active",...t};return c.batch(()=>(s.findAll(t).forEach(i=>{i.reset()}),this.refetchQueries(r,e)))}cancelQueries(t={},e={}){const s={revert:!0,...e},r=c.batch(()=>a(this,n).findAll(t).map(i=>i.cancel(s)));return Promise.all(r).then(g).catch(g)}invalidateQueries(t={},e={}){return c.batch(()=>{if(a(this,n).findAll(t).forEach(r=>{r.invalidate()}),t.refetchType==="none")return Promise.resolve();const s={...t,type:t.refetchType??t.type??"active"};return this.refetchQueries(s,e)})}refetchQueries(t={},e){const s={...e,cancelRefetch:(e==null?void 0:e.cancelRefetch)??!0},r=c.batch(()=>a(this,n).findAll(t).filter(i=>!i.isDisabled()).map(i=>{let u=i.fetch(void 0,s);return s.throwOnError||(u=u.catch(g)),i.state.fetchStatus==="paused"?Promise.resolve():u}));return Promise.all(r).then(g)}fetchQuery(t){const e=this.defaultQueryOptions(t);e.retry===void 0&&(e.retry=!1);const s=a(this,n).build(this,e);return s.isStaleByTime(e.staleTime)?s.fetch(e):Promise.resolve(s.state.data)}prefetchQuery(t){return this.fetchQuery(t).then(g).catch(g)}fetchInfiniteQuery(t){return t.behavior=le(t.pages),this.fetchQuery(t)}prefetchInfiniteQuery(t){return this.fetchInfiniteQuery(t).then(g).catch(g)}resumePausedMutations(){return U.isOnline()?a(this,p).resumePausedMutations():Promise.resolve()}getQueryCache(){return a(this,n)}getMutationCache(){return a(this,p)}getDefaultOptions(){return a(this,P)}setDefaultOptions(t){h(this,P,t)}setQueryDefaults(t,e){a(this,O).set($(t),{queryKey:t,defaultOptions:e})}getQueryDefaults(t){const e=[...a(this,O).values()];let s={};return e.forEach(r=>{z(t,r.queryKey)&&(s={...s,...r.defaultOptions})}),s}setMutationDefaults(t,e){a(this,M).set($(t),{mutationKey:t,defaultOptions:e})}getMutationDefaults(t){const e=[...a(this,M).values()];let s={};return e.forEach(r=>{z(t,r.mutationKey)&&(s={...s,...r.defaultOptions})}),s}defaultQueryOptions(t){if(t._defaulted)return t;const e={...a(this,P).queries,...this.getQueryDefaults(t.queryKey),...t,_defaulted:!0};return e.queryHash||(e.queryHash=Y(e.queryKey,e)),e.refetchOnReconnect===void 0&&(e.refetchOnReconnect=e.networkMode!=="always"),e.throwOnError===void 0&&(e.throwOnError=!!e.suspense),!e.networkMode&&e.persister&&(e.networkMode="offlineFirst"),e.enabled!==!0&&e.queryFn===Z&&(e.enabled=!1),e}defaultMutationOptions(t){return t!=null&&t._defaulted?t:{...a(this,P).mutations,...(t==null?void 0:t.mutationKey)&&this.getMutationDefaults(t.mutationKey),...t,_defaulted:!0}}clear(){a(this,n).clear(),a(this,p).clear()}},n=new WeakMap,p=new WeakMap,P=new WeakMap,O=new WeakMap,M=new WeakMap,v=new WeakMap,q=new WeakMap,w=new WeakMap,W);export{ge as Q};
